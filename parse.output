State 111 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: declaration_list

    2 declaration_list: declaration_list declaration
    3                 | declaration

    4 declaration: var_declaration
    5            | fun_declaration

    6 var_declaration: INT ID SEMICOLON
    7                | INT ID LEFTSQUAREBRACKET NUM RIGHTSQUAREBRACKET SEMICOLON

    8 fun_declaration: VOID ID LEFTBRACKET params RIGHTBRACKET compound_stmt
    9                | INT ID LEFTBRACKET params RIGHTBRACKET compound_stmt

   10 params: param_list
   11       | VOID

   12 param_list: param_list COMMA param
   13           | param

   14 param: INT ID
   15      | INT ID LEFTSQUAREBRACKET RIGHTSQUAREBRACKET

   16 compound_stmt: LEFTBRACE local_declarations statement_list RIGHTBRACE
   17              | LEFTBRACE local_declarations RIGHTBRACE
   18              | LEFTBRACE statement_list RIGHTBRACE

   19 local_declarations: local_declarations var_declaration
   20                   | var_declaration

   21 statement_list: statement_list statement
   22               | statement

   23 statement: expression_stmt
   24          | selection_stmt
   25          | compound_stmt
   26          | iteration_stmt
   27          | return_stmt

   28 expression_stmt: expression SEMICOLON
   29                | SEMICOLON

   30 selection_stmt: IF LEFTBRACKET expression RIGHTBRACKET statement
   31               | IF LEFTBRACKET expression RIGHTBRACKET statement ELSE statement

   32 iteration_stmt: WHILE LEFTBRACKET expression RIGHTBRACKET statement

   33 return_stmt: RETURN SEMICOLON
   34            | RETURN expression SEMICOLON

   35 expression: var ASSIGNMENT expression
   36           | simple_expression

   37 var: ID
   38    | ID LEFTSQUAREBRACKET expression RIGHTSQUAREBRACKET

   39 simple_expression: additive_expression LESSEQUAL additive_expression
   40                  | additive_expression LESS additive_expression
   41                  | additive_expression GREATER additive_expression
   42                  | additive_expression GREATEREQUAL additive_expression
   43                  | additive_expression EQUAL additive_expression
   44                  | additive_expression UNEQUAL additive_expression
   45                  | additive_expression

   46 additive_expression: additive_expression PLUS term
   47                    | additive_expression MINUS term
   48                    | term

   49 term: term MULTI factor
   50     | term DIVIDE factor
   51     | factor

   52 factor: LEFTBRACKET expression RIGHTBRACKET
   53       | var
   54       | call
   55       | NUM

   56 call: ID LEFTBRACKET args RIGHTBRACKET
   57     | ID LEFTBRACKET RIGHTBRACKET

   58 args: args COMMA expression
   59     | expression


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    ID <m_id> (258) 6 7 8 9 14 15 37 38 56 57
    NUM <m_num> (259) 7 55
    PLUS <m_op> (260) 46
    MINUS <m_op> (261) 47
    MULTI <m_op> (262) 49
    DIVIDE <m_op> (263) 50
    LESS <m_op> (264) 40
    LESSEQUAL <m_op> (265) 39
    GREATER <m_op> (266) 41
    GREATEREQUAL <m_op> (267) 42
    EQUAL <m_op> (268) 43
    UNEQUAL <m_op> (269) 44
    ASSIGNMENT <m_op> (270) 35
    SEMICOLON <m_op> (271) 6 7 28 29 33 34
    COMMA <m_op> (272) 12 58
    LEFTBRACKET <m_op> (273) 8 9 30 31 32 52 56 57
    RIGHTBRACKET <m_op> (274) 8 9 30 31 32 52 56 57
    LEFTSQUAREBRACKET <m_op> (275) 7 15 38
    RIGHTSQUAREBRACKET <m_op> (276) 7 15 38
    LEFTBRACE <m_op> (277) 16 17 18
    RIGHTBRACE <m_op> (278) 16 17 18
    ELSE <m_reserved> (279) 31
    IF <m_reserved> (280) 30 31
    INT <m_reserved> (281) 6 7 9 14 15
    VOID <m_reserved> (282) 8 11
    RETURN <m_reserved> (283) 33 34
    WHILE <m_reserved> (284) 32


Nonterminals, with rules where they appear

    $accept (30)
        on left: 0
    program <m_node> (31)
        on left: 1
        on right: 0
    declaration_list <m_node> (32)
        on left: 2 3
        on right: 1 2
    declaration <m_node> (33)
        on left: 4 5
        on right: 2 3
    var_declaration <m_node> (34)
        on left: 6 7
        on right: 4 19 20
    fun_declaration <m_node> (35)
        on left: 8 9
        on right: 5
    params <m_node> (36)
        on left: 10 11
        on right: 8 9
    param_list <m_node> (37)
        on left: 12 13
        on right: 10 12
    param <m_node> (38)
        on left: 14 15
        on right: 12 13
    compound_stmt <m_node> (39)
        on left: 16 17 18
        on right: 8 9 25
    local_declarations <m_node> (40)
        on left: 19 20
        on right: 16 17 19
    statement_list <m_node> (41)
        on left: 21 22
        on right: 16 18 21
    statement <m_node> (42)
        on left: 23 24 25 26 27
        on right: 21 22 30 31 32
    expression_stmt <m_node> (43)
        on left: 28 29
        on right: 23
    selection_stmt <m_node> (44)
        on left: 30 31
        on right: 24
    iteration_stmt <m_node> (45)
        on left: 32
        on right: 26
    return_stmt <m_node> (46)
        on left: 33 34
        on right: 27
    expression <m_node> (47)
        on left: 35 36
        on right: 28 30 31 32 34 35 38 52 58 59
    var <m_node> (48)
        on left: 37 38
        on right: 35 53
    simple_expression <m_node> (49)
        on left: 39 40 41 42 43 44 45
        on right: 36
    additive_expression <m_node> (50)
        on left: 46 47 48
        on right: 39 40 41 42 43 44 45 46 47
    term <m_node> (51)
        on left: 49 50 51
        on right: 46 47 48 49 50
    factor <m_node> (52)
        on left: 52 53 54 55
        on right: 49 50 51
    call <m_node> (53)
        on left: 56 57
        on right: 54
    args <m_node> (54)
        on left: 58 59
        on right: 56 58


State 0

    0 $accept: . program $end

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    program           go to state 3
    declaration_list  go to state 4
    declaration       go to state 5
    var_declaration   go to state 6
    fun_declaration   go to state 7


State 1

    6 var_declaration: INT . ID SEMICOLON
    7                | INT . ID LEFTSQUAREBRACKET NUM RIGHTSQUAREBRACKET SEMICOLON
    9 fun_declaration: INT . ID LEFTBRACKET params RIGHTBRACKET compound_stmt

    ID  shift, and go to state 8


State 2

    8 fun_declaration: VOID . ID LEFTBRACKET params RIGHTBRACKET compound_stmt

    ID  shift, and go to state 9


State 3

    0 $accept: program . $end

    $end  shift, and go to state 10


State 4

    1 program: declaration_list .
    2 declaration_list: declaration_list . declaration

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    $default  reduce using rule 1 (program)

    declaration      go to state 11
    var_declaration  go to state 6
    fun_declaration  go to state 7


State 5

    3 declaration_list: declaration .

    $default  reduce using rule 3 (declaration_list)


State 6

    4 declaration: var_declaration .

    $default  reduce using rule 4 (declaration)


State 7

    5 declaration: fun_declaration .

    $default  reduce using rule 5 (declaration)


State 8

    6 var_declaration: INT ID . SEMICOLON
    7                | INT ID . LEFTSQUAREBRACKET NUM RIGHTSQUAREBRACKET SEMICOLON
    9 fun_declaration: INT ID . LEFTBRACKET params RIGHTBRACKET compound_stmt

    SEMICOLON          shift, and go to state 12
    LEFTBRACKET        shift, and go to state 13
    LEFTSQUAREBRACKET  shift, and go to state 14


State 9

    8 fun_declaration: VOID ID . LEFTBRACKET params RIGHTBRACKET compound_stmt

    LEFTBRACKET  shift, and go to state 15


State 10

    0 $accept: program $end .

    $default  accept


State 11

    2 declaration_list: declaration_list declaration .

    $default  reduce using rule 2 (declaration_list)


State 12

    6 var_declaration: INT ID SEMICOLON .

    $default  reduce using rule 6 (var_declaration)


State 13

    9 fun_declaration: INT ID LEFTBRACKET . params RIGHTBRACKET compound_stmt

    INT   shift, and go to state 16
    VOID  shift, and go to state 17

    params      go to state 18
    param_list  go to state 19
    param       go to state 20


State 14

    7 var_declaration: INT ID LEFTSQUAREBRACKET . NUM RIGHTSQUAREBRACKET SEMICOLON

    NUM  shift, and go to state 21


State 15

    8 fun_declaration: VOID ID LEFTBRACKET . params RIGHTBRACKET compound_stmt

    INT   shift, and go to state 16
    VOID  shift, and go to state 17

    params      go to state 22
    param_list  go to state 19
    param       go to state 20


State 16

   14 param: INT . ID
   15      | INT . ID LEFTSQUAREBRACKET RIGHTSQUAREBRACKET

    ID  shift, and go to state 23


State 17

   11 params: VOID .

    $default  reduce using rule 11 (params)


State 18

    9 fun_declaration: INT ID LEFTBRACKET params . RIGHTBRACKET compound_stmt

    RIGHTBRACKET  shift, and go to state 24


State 19

   10 params: param_list .
   12 param_list: param_list . COMMA param

    COMMA  shift, and go to state 25

    $default  reduce using rule 10 (params)


State 20

   13 param_list: param .

    $default  reduce using rule 13 (param_list)


State 21

    7 var_declaration: INT ID LEFTSQUAREBRACKET NUM . RIGHTSQUAREBRACKET SEMICOLON

    RIGHTSQUAREBRACKET  shift, and go to state 26


State 22

    8 fun_declaration: VOID ID LEFTBRACKET params . RIGHTBRACKET compound_stmt

    RIGHTBRACKET  shift, and go to state 27


State 23

   14 param: INT ID .
   15      | INT ID . LEFTSQUAREBRACKET RIGHTSQUAREBRACKET

    LEFTSQUAREBRACKET  shift, and go to state 28

    $default  reduce using rule 14 (param)


State 24

    9 fun_declaration: INT ID LEFTBRACKET params RIGHTBRACKET . compound_stmt

    LEFTBRACE  shift, and go to state 29

    compound_stmt  go to state 30


State 25

   12 param_list: param_list COMMA . param

    INT  shift, and go to state 16

    param  go to state 31


State 26

    7 var_declaration: INT ID LEFTSQUAREBRACKET NUM RIGHTSQUAREBRACKET . SEMICOLON

    SEMICOLON  shift, and go to state 32


State 27

    8 fun_declaration: VOID ID LEFTBRACKET params RIGHTBRACKET . compound_stmt

    LEFTBRACE  shift, and go to state 29

    compound_stmt  go to state 33


State 28

   15 param: INT ID LEFTSQUAREBRACKET . RIGHTSQUAREBRACKET

    RIGHTSQUAREBRACKET  shift, and go to state 34


State 29

   16 compound_stmt: LEFTBRACE . local_declarations statement_list RIGHTBRACE
   17              | LEFTBRACE . local_declarations RIGHTBRACE
   18              | LEFTBRACE . statement_list RIGHTBRACE

    ID           shift, and go to state 35
    NUM          shift, and go to state 36
    SEMICOLON    shift, and go to state 37
    LEFTBRACKET  shift, and go to state 38
    LEFTBRACE    shift, and go to state 29
    IF           shift, and go to state 39
    INT          shift, and go to state 40
    RETURN       shift, and go to state 41
    WHILE        shift, and go to state 42

    var_declaration      go to state 43
    compound_stmt        go to state 44
    local_declarations   go to state 45
    statement_list       go to state 46
    statement            go to state 47
    expression_stmt      go to state 48
    selection_stmt       go to state 49
    iteration_stmt       go to state 50
    return_stmt          go to state 51
    expression           go to state 52
    var                  go to state 53
    simple_expression    go to state 54
    additive_expression  go to state 55
    term                 go to state 56
    factor               go to state 57
    call                 go to state 58


State 30

    9 fun_declaration: INT ID LEFTBRACKET params RIGHTBRACKET compound_stmt .

    $default  reduce using rule 9 (fun_declaration)


State 31

   12 param_list: param_list COMMA param .

    $default  reduce using rule 12 (param_list)


State 32

    7 var_declaration: INT ID LEFTSQUAREBRACKET NUM RIGHTSQUAREBRACKET SEMICOLON .

    $default  reduce using rule 7 (var_declaration)


State 33

    8 fun_declaration: VOID ID LEFTBRACKET params RIGHTBRACKET compound_stmt .

    $default  reduce using rule 8 (fun_declaration)


State 34

   15 param: INT ID LEFTSQUAREBRACKET RIGHTSQUAREBRACKET .

    $default  reduce using rule 15 (param)


State 35

   37 var: ID .
   38    | ID . LEFTSQUAREBRACKET expression RIGHTSQUAREBRACKET
   56 call: ID . LEFTBRACKET args RIGHTBRACKET
   57     | ID . LEFTBRACKET RIGHTBRACKET

    LEFTBRACKET        shift, and go to state 59
    LEFTSQUAREBRACKET  shift, and go to state 60

    $default  reduce using rule 37 (var)


State 36

   55 factor: NUM .

    $default  reduce using rule 55 (factor)


State 37

   29 expression_stmt: SEMICOLON .

    $default  reduce using rule 29 (expression_stmt)


State 38

   52 factor: LEFTBRACKET . expression RIGHTBRACKET

    ID           shift, and go to state 35
    NUM          shift, and go to state 36
    LEFTBRACKET  shift, and go to state 38

    expression           go to state 61
    var                  go to state 53
    simple_expression    go to state 54
    additive_expression  go to state 55
    term                 go to state 56
    factor               go to state 57
    call                 go to state 58


State 39

   30 selection_stmt: IF . LEFTBRACKET expression RIGHTBRACKET statement
   31               | IF . LEFTBRACKET expression RIGHTBRACKET statement ELSE statement

    LEFTBRACKET  shift, and go to state 62


State 40

    6 var_declaration: INT . ID SEMICOLON
    7                | INT . ID LEFTSQUAREBRACKET NUM RIGHTSQUAREBRACKET SEMICOLON

    ID  shift, and go to state 63


State 41

   33 return_stmt: RETURN . SEMICOLON
   34            | RETURN . expression SEMICOLON

    ID           shift, and go to state 35
    NUM          shift, and go to state 36
    SEMICOLON    shift, and go to state 64
    LEFTBRACKET  shift, and go to state 38

    expression           go to state 65
    var                  go to state 53
    simple_expression    go to state 54
    additive_expression  go to state 55
    term                 go to state 56
    factor               go to state 57
    call                 go to state 58


State 42

   32 iteration_stmt: WHILE . LEFTBRACKET expression RIGHTBRACKET statement

    LEFTBRACKET  shift, and go to state 66


State 43

   20 local_declarations: var_declaration .

    $default  reduce using rule 20 (local_declarations)


State 44

   25 statement: compound_stmt .

    $default  reduce using rule 25 (statement)


State 45

   16 compound_stmt: LEFTBRACE local_declarations . statement_list RIGHTBRACE
   17              | LEFTBRACE local_declarations . RIGHTBRACE
   19 local_declarations: local_declarations . var_declaration

    ID           shift, and go to state 35
    NUM          shift, and go to state 36
    SEMICOLON    shift, and go to state 37
    LEFTBRACKET  shift, and go to state 38
    LEFTBRACE    shift, and go to state 29
    RIGHTBRACE   shift, and go to state 67
    IF           shift, and go to state 39
    INT          shift, and go to state 40
    RETURN       shift, and go to state 41
    WHILE        shift, and go to state 42

    var_declaration      go to state 68
    compound_stmt        go to state 44
    statement_list       go to state 69
    statement            go to state 47
    expression_stmt      go to state 48
    selection_stmt       go to state 49
    iteration_stmt       go to state 50
    return_stmt          go to state 51
    expression           go to state 52
    var                  go to state 53
    simple_expression    go to state 54
    additive_expression  go to state 55
    term                 go to state 56
    factor               go to state 57
    call                 go to state 58


State 46

   18 compound_stmt: LEFTBRACE statement_list . RIGHTBRACE
   21 statement_list: statement_list . statement

    ID           shift, and go to state 35
    NUM          shift, and go to state 36
    SEMICOLON    shift, and go to state 37
    LEFTBRACKET  shift, and go to state 38
    LEFTBRACE    shift, and go to state 29
    RIGHTBRACE   shift, and go to state 70
    IF           shift, and go to state 39
    RETURN       shift, and go to state 41
    WHILE        shift, and go to state 42

    compound_stmt        go to state 44
    statement            go to state 71
    expression_stmt      go to state 48
    selection_stmt       go to state 49
    iteration_stmt       go to state 50
    return_stmt          go to state 51
    expression           go to state 52
    var                  go to state 53
    simple_expression    go to state 54
    additive_expression  go to state 55
    term                 go to state 56
    factor               go to state 57
    call                 go to state 58


State 47

   22 statement_list: statement .

    $default  reduce using rule 22 (statement_list)


State 48

   23 statement: expression_stmt .

    $default  reduce using rule 23 (statement)


State 49

   24 statement: selection_stmt .

    $default  reduce using rule 24 (statement)


State 50

   26 statement: iteration_stmt .

    $default  reduce using rule 26 (statement)


State 51

   27 statement: return_stmt .

    $default  reduce using rule 27 (statement)


State 52

   28 expression_stmt: expression . SEMICOLON

    SEMICOLON  shift, and go to state 72


State 53

   35 expression: var . ASSIGNMENT expression
   53 factor: var .

    ASSIGNMENT  shift, and go to state 73

    $default  reduce using rule 53 (factor)


State 54

   36 expression: simple_expression .

    $default  reduce using rule 36 (expression)


State 55

   39 simple_expression: additive_expression . LESSEQUAL additive_expression
   40                  | additive_expression . LESS additive_expression
   41                  | additive_expression . GREATER additive_expression
   42                  | additive_expression . GREATEREQUAL additive_expression
   43                  | additive_expression . EQUAL additive_expression
   44                  | additive_expression . UNEQUAL additive_expression
   45                  | additive_expression .
   46 additive_expression: additive_expression . PLUS term
   47                    | additive_expression . MINUS term

    PLUS          shift, and go to state 74
    MINUS         shift, and go to state 75
    LESS          shift, and go to state 76
    LESSEQUAL     shift, and go to state 77
    GREATER       shift, and go to state 78
    GREATEREQUAL  shift, and go to state 79
    EQUAL         shift, and go to state 80
    UNEQUAL       shift, and go to state 81

    $default  reduce using rule 45 (simple_expression)


State 56

   48 additive_expression: term .
   49 term: term . MULTI factor
   50     | term . DIVIDE factor

    MULTI   shift, and go to state 82
    DIVIDE  shift, and go to state 83

    $default  reduce using rule 48 (additive_expression)


State 57

   51 term: factor .

    $default  reduce using rule 51 (term)


State 58

   54 factor: call .

    $default  reduce using rule 54 (factor)


State 59

   56 call: ID LEFTBRACKET . args RIGHTBRACKET
   57     | ID LEFTBRACKET . RIGHTBRACKET

    ID            shift, and go to state 35
    NUM           shift, and go to state 36
    LEFTBRACKET   shift, and go to state 38
    RIGHTBRACKET  shift, and go to state 84

    expression           go to state 85
    var                  go to state 53
    simple_expression    go to state 54
    additive_expression  go to state 55
    term                 go to state 56
    factor               go to state 57
    call                 go to state 58
    args                 go to state 86


State 60

   38 var: ID LEFTSQUAREBRACKET . expression RIGHTSQUAREBRACKET

    ID           shift, and go to state 35
    NUM          shift, and go to state 36
    LEFTBRACKET  shift, and go to state 38

    expression           go to state 87
    var                  go to state 53
    simple_expression    go to state 54
    additive_expression  go to state 55
    term                 go to state 56
    factor               go to state 57
    call                 go to state 58


State 61

   52 factor: LEFTBRACKET expression . RIGHTBRACKET

    RIGHTBRACKET  shift, and go to state 88


State 62

   30 selection_stmt: IF LEFTBRACKET . expression RIGHTBRACKET statement
   31               | IF LEFTBRACKET . expression RIGHTBRACKET statement ELSE statement

    ID           shift, and go to state 35
    NUM          shift, and go to state 36
    LEFTBRACKET  shift, and go to state 38

    expression           go to state 89
    var                  go to state 53
    simple_expression    go to state 54
    additive_expression  go to state 55
    term                 go to state 56
    factor               go to state 57
    call                 go to state 58


State 63

    6 var_declaration: INT ID . SEMICOLON
    7                | INT ID . LEFTSQUAREBRACKET NUM RIGHTSQUAREBRACKET SEMICOLON

    SEMICOLON          shift, and go to state 12
    LEFTSQUAREBRACKET  shift, and go to state 14


State 64

   33 return_stmt: RETURN SEMICOLON .

    $default  reduce using rule 33 (return_stmt)


State 65

   34 return_stmt: RETURN expression . SEMICOLON

    SEMICOLON  shift, and go to state 90


State 66

   32 iteration_stmt: WHILE LEFTBRACKET . expression RIGHTBRACKET statement

    ID           shift, and go to state 35
    NUM          shift, and go to state 36
    LEFTBRACKET  shift, and go to state 38

    expression           go to state 91
    var                  go to state 53
    simple_expression    go to state 54
    additive_expression  go to state 55
    term                 go to state 56
    factor               go to state 57
    call                 go to state 58


State 67

   17 compound_stmt: LEFTBRACE local_declarations RIGHTBRACE .

    $default  reduce using rule 17 (compound_stmt)


State 68

   19 local_declarations: local_declarations var_declaration .

    $default  reduce using rule 19 (local_declarations)


State 69

   16 compound_stmt: LEFTBRACE local_declarations statement_list . RIGHTBRACE
   21 statement_list: statement_list . statement

    ID           shift, and go to state 35
    NUM          shift, and go to state 36
    SEMICOLON    shift, and go to state 37
    LEFTBRACKET  shift, and go to state 38
    LEFTBRACE    shift, and go to state 29
    RIGHTBRACE   shift, and go to state 92
    IF           shift, and go to state 39
    RETURN       shift, and go to state 41
    WHILE        shift, and go to state 42

    compound_stmt        go to state 44
    statement            go to state 71
    expression_stmt      go to state 48
    selection_stmt       go to state 49
    iteration_stmt       go to state 50
    return_stmt          go to state 51
    expression           go to state 52
    var                  go to state 53
    simple_expression    go to state 54
    additive_expression  go to state 55
    term                 go to state 56
    factor               go to state 57
    call                 go to state 58


State 70

   18 compound_stmt: LEFTBRACE statement_list RIGHTBRACE .

    $default  reduce using rule 18 (compound_stmt)


State 71

   21 statement_list: statement_list statement .

    $default  reduce using rule 21 (statement_list)


State 72

   28 expression_stmt: expression SEMICOLON .

    $default  reduce using rule 28 (expression_stmt)


State 73

   35 expression: var ASSIGNMENT . expression

    ID           shift, and go to state 35
    NUM          shift, and go to state 36
    LEFTBRACKET  shift, and go to state 38

    expression           go to state 93
    var                  go to state 53
    simple_expression    go to state 54
    additive_expression  go to state 55
    term                 go to state 56
    factor               go to state 57
    call                 go to state 58


State 74

   46 additive_expression: additive_expression PLUS . term

    ID           shift, and go to state 35
    NUM          shift, and go to state 36
    LEFTBRACKET  shift, and go to state 38

    var     go to state 94
    term    go to state 95
    factor  go to state 57
    call    go to state 58


State 75

   47 additive_expression: additive_expression MINUS . term

    ID           shift, and go to state 35
    NUM          shift, and go to state 36
    LEFTBRACKET  shift, and go to state 38

    var     go to state 94
    term    go to state 96
    factor  go to state 57
    call    go to state 58


State 76

   40 simple_expression: additive_expression LESS . additive_expression

    ID           shift, and go to state 35
    NUM          shift, and go to state 36
    LEFTBRACKET  shift, and go to state 38

    var                  go to state 94
    additive_expression  go to state 97
    term                 go to state 56
    factor               go to state 57
    call                 go to state 58


State 77

   39 simple_expression: additive_expression LESSEQUAL . additive_expression

    ID           shift, and go to state 35
    NUM          shift, and go to state 36
    LEFTBRACKET  shift, and go to state 38

    var                  go to state 94
    additive_expression  go to state 98
    term                 go to state 56
    factor               go to state 57
    call                 go to state 58


State 78

   41 simple_expression: additive_expression GREATER . additive_expression

    ID           shift, and go to state 35
    NUM          shift, and go to state 36
    LEFTBRACKET  shift, and go to state 38

    var                  go to state 94
    additive_expression  go to state 99
    term                 go to state 56
    factor               go to state 57
    call                 go to state 58


State 79

   42 simple_expression: additive_expression GREATEREQUAL . additive_expression

    ID           shift, and go to state 35
    NUM          shift, and go to state 36
    LEFTBRACKET  shift, and go to state 38

    var                  go to state 94
    additive_expression  go to state 100
    term                 go to state 56
    factor               go to state 57
    call                 go to state 58


State 80

   43 simple_expression: additive_expression EQUAL . additive_expression

    ID           shift, and go to state 35
    NUM          shift, and go to state 36
    LEFTBRACKET  shift, and go to state 38

    var                  go to state 94
    additive_expression  go to state 101
    term                 go to state 56
    factor               go to state 57
    call                 go to state 58


State 81

   44 simple_expression: additive_expression UNEQUAL . additive_expression

    ID           shift, and go to state 35
    NUM          shift, and go to state 36
    LEFTBRACKET  shift, and go to state 38

    var                  go to state 94
    additive_expression  go to state 102
    term                 go to state 56
    factor               go to state 57
    call                 go to state 58


State 82

   49 term: term MULTI . factor

    ID           shift, and go to state 35
    NUM          shift, and go to state 36
    LEFTBRACKET  shift, and go to state 38

    var     go to state 94
    factor  go to state 103
    call    go to state 58


State 83

   50 term: term DIVIDE . factor

    ID           shift, and go to state 35
    NUM          shift, and go to state 36
    LEFTBRACKET  shift, and go to state 38

    var     go to state 94
    factor  go to state 104
    call    go to state 58


State 84

   57 call: ID LEFTBRACKET RIGHTBRACKET .

    $default  reduce using rule 57 (call)


State 85

   59 args: expression .

    $default  reduce using rule 59 (args)


State 86

   56 call: ID LEFTBRACKET args . RIGHTBRACKET
   58 args: args . COMMA expression

    COMMA         shift, and go to state 105
    RIGHTBRACKET  shift, and go to state 106


State 87

   38 var: ID LEFTSQUAREBRACKET expression . RIGHTSQUAREBRACKET

    RIGHTSQUAREBRACKET  shift, and go to state 107


State 88

   52 factor: LEFTBRACKET expression RIGHTBRACKET .

    $default  reduce using rule 52 (factor)


State 89

   30 selection_stmt: IF LEFTBRACKET expression . RIGHTBRACKET statement
   31               | IF LEFTBRACKET expression . RIGHTBRACKET statement ELSE statement

    RIGHTBRACKET  shift, and go to state 108


State 90

   34 return_stmt: RETURN expression SEMICOLON .

    $default  reduce using rule 34 (return_stmt)


State 91

   32 iteration_stmt: WHILE LEFTBRACKET expression . RIGHTBRACKET statement

    RIGHTBRACKET  shift, and go to state 109


State 92

   16 compound_stmt: LEFTBRACE local_declarations statement_list RIGHTBRACE .

    $default  reduce using rule 16 (compound_stmt)


State 93

   35 expression: var ASSIGNMENT expression .

    $default  reduce using rule 35 (expression)


State 94

   53 factor: var .

    $default  reduce using rule 53 (factor)


State 95

   46 additive_expression: additive_expression PLUS term .
   49 term: term . MULTI factor
   50     | term . DIVIDE factor

    MULTI   shift, and go to state 82
    DIVIDE  shift, and go to state 83

    $default  reduce using rule 46 (additive_expression)


State 96

   47 additive_expression: additive_expression MINUS term .
   49 term: term . MULTI factor
   50     | term . DIVIDE factor

    MULTI   shift, and go to state 82
    DIVIDE  shift, and go to state 83

    $default  reduce using rule 47 (additive_expression)


State 97

   40 simple_expression: additive_expression LESS additive_expression .
   46 additive_expression: additive_expression . PLUS term
   47                    | additive_expression . MINUS term

    PLUS   shift, and go to state 74
    MINUS  shift, and go to state 75

    $default  reduce using rule 40 (simple_expression)


State 98

   39 simple_expression: additive_expression LESSEQUAL additive_expression .
   46 additive_expression: additive_expression . PLUS term
   47                    | additive_expression . MINUS term

    PLUS   shift, and go to state 74
    MINUS  shift, and go to state 75

    $default  reduce using rule 39 (simple_expression)


State 99

   41 simple_expression: additive_expression GREATER additive_expression .
   46 additive_expression: additive_expression . PLUS term
   47                    | additive_expression . MINUS term

    PLUS   shift, and go to state 74
    MINUS  shift, and go to state 75

    $default  reduce using rule 41 (simple_expression)


State 100

   42 simple_expression: additive_expression GREATEREQUAL additive_expression .
   46 additive_expression: additive_expression . PLUS term
   47                    | additive_expression . MINUS term

    PLUS   shift, and go to state 74
    MINUS  shift, and go to state 75

    $default  reduce using rule 42 (simple_expression)


State 101

   43 simple_expression: additive_expression EQUAL additive_expression .
   46 additive_expression: additive_expression . PLUS term
   47                    | additive_expression . MINUS term

    PLUS   shift, and go to state 74
    MINUS  shift, and go to state 75

    $default  reduce using rule 43 (simple_expression)


State 102

   44 simple_expression: additive_expression UNEQUAL additive_expression .
   46 additive_expression: additive_expression . PLUS term
   47                    | additive_expression . MINUS term

    PLUS   shift, and go to state 74
    MINUS  shift, and go to state 75

    $default  reduce using rule 44 (simple_expression)


State 103

   49 term: term MULTI factor .

    $default  reduce using rule 49 (term)


State 104

   50 term: term DIVIDE factor .

    $default  reduce using rule 50 (term)


State 105

   58 args: args COMMA . expression

    ID           shift, and go to state 35
    NUM          shift, and go to state 36
    LEFTBRACKET  shift, and go to state 38

    expression           go to state 110
    var                  go to state 53
    simple_expression    go to state 54
    additive_expression  go to state 55
    term                 go to state 56
    factor               go to state 57
    call                 go to state 58


State 106

   56 call: ID LEFTBRACKET args RIGHTBRACKET .

    $default  reduce using rule 56 (call)


State 107

   38 var: ID LEFTSQUAREBRACKET expression RIGHTSQUAREBRACKET .

    $default  reduce using rule 38 (var)


State 108

   30 selection_stmt: IF LEFTBRACKET expression RIGHTBRACKET . statement
   31               | IF LEFTBRACKET expression RIGHTBRACKET . statement ELSE statement

    ID           shift, and go to state 35
    NUM          shift, and go to state 36
    SEMICOLON    shift, and go to state 37
    LEFTBRACKET  shift, and go to state 38
    LEFTBRACE    shift, and go to state 29
    IF           shift, and go to state 39
    RETURN       shift, and go to state 41
    WHILE        shift, and go to state 42

    compound_stmt        go to state 44
    statement            go to state 111
    expression_stmt      go to state 48
    selection_stmt       go to state 49
    iteration_stmt       go to state 50
    return_stmt          go to state 51
    expression           go to state 52
    var                  go to state 53
    simple_expression    go to state 54
    additive_expression  go to state 55
    term                 go to state 56
    factor               go to state 57
    call                 go to state 58


State 109

   32 iteration_stmt: WHILE LEFTBRACKET expression RIGHTBRACKET . statement

    ID           shift, and go to state 35
    NUM          shift, and go to state 36
    SEMICOLON    shift, and go to state 37
    LEFTBRACKET  shift, and go to state 38
    LEFTBRACE    shift, and go to state 29
    IF           shift, and go to state 39
    RETURN       shift, and go to state 41
    WHILE        shift, and go to state 42

    compound_stmt        go to state 44
    statement            go to state 112
    expression_stmt      go to state 48
    selection_stmt       go to state 49
    iteration_stmt       go to state 50
    return_stmt          go to state 51
    expression           go to state 52
    var                  go to state 53
    simple_expression    go to state 54
    additive_expression  go to state 55
    term                 go to state 56
    factor               go to state 57
    call                 go to state 58


State 110

   58 args: args COMMA expression .

    $default  reduce using rule 58 (args)


State 111

   30 selection_stmt: IF LEFTBRACKET expression RIGHTBRACKET statement .
   31               | IF LEFTBRACKET expression RIGHTBRACKET statement . ELSE statement

    ELSE  shift, and go to state 113

    ELSE      [reduce using rule 30 (selection_stmt)]
    $default  reduce using rule 30 (selection_stmt)


State 112

   32 iteration_stmt: WHILE LEFTBRACKET expression RIGHTBRACKET statement .

    $default  reduce using rule 32 (iteration_stmt)


State 113

   31 selection_stmt: IF LEFTBRACKET expression RIGHTBRACKET statement ELSE . statement

    ID           shift, and go to state 35
    NUM          shift, and go to state 36
    SEMICOLON    shift, and go to state 37
    LEFTBRACKET  shift, and go to state 38
    LEFTBRACE    shift, and go to state 29
    IF           shift, and go to state 39
    RETURN       shift, and go to state 41
    WHILE        shift, and go to state 42

    compound_stmt        go to state 44
    statement            go to state 114
    expression_stmt      go to state 48
    selection_stmt       go to state 49
    iteration_stmt       go to state 50
    return_stmt          go to state 51
    expression           go to state 52
    var                  go to state 53
    simple_expression    go to state 54
    additive_expression  go to state 55
    term                 go to state 56
    factor               go to state 57
    call                 go to state 58


State 114

   31 selection_stmt: IF LEFTBRACKET expression RIGHTBRACKET statement ELSE statement .

    $default  reduce using rule 31 (selection_stmt)
